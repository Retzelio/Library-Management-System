<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="Guna2PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <data name="Guna2PictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AurpxSY98pejAAAAAElFTkSuQmCC
</value>
  </data>
</root>